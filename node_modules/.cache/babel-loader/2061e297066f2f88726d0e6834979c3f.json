{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './App.scss';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Board from './components/Board/Board';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nconst actions = {\n  onSetActiveBoard: val => ({\n    type: 'SET_ACTIVE_BOARD',\n    payload: val\n  })\n};\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Board, {\n      id: this.props.activeBoard,\n      boardsList: this.props.boardsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  activeBoard: state.activeBoard,\n  boardsList: state.boardsList\n});\n\nconst mapDispatchToProps = dispatch => _objectSpread({}, bindActionCreators(_objectSpread({}, actions), dispatch));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/App.tsx"],"names":["React","Sidebar","Board","connect","bindActionCreators","actions","onSetActiveBoard","val","type","payload","App","Component","render","props","activeBoard","boardsList","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AA6BA,MAAMC,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAGC,GAAD,KAAkB;AAACC,IAAAA,IAAI,EAAE,kBAAP;AAA2BC,IAAAA,OAAO,EAAEF;AAApC,GAAlB;AADJ,CAAhB;;AAIA,MAAMG,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAyC;AAEvCC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,WADjB;AAEE,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAaD;;AAhBsC;;AAoBzC,MAAMC,eAAe,GAAIC,KAAD,KAAsB;AAC1CH,EAAAA,WAAW,EAAEG,KAAK,CAACH,WADuB;AAE1CC,EAAAA,UAAU,EAAEE,KAAK,CAACF;AAFwB,CAAtB,CAAxB;;AAKA,MAAMG,kBAAkB,GAAIC,QAAD,sBACtBf,kBAAkB,mBACdC,OADc,GAEhBc,QAFgB,CADI,CAA3B;;AAMA,eAAehB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Board from './components/Board/Board';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface AppState {\n  activeBoard: number;\n  boardsList: Array<{\n    id: number, \n    img: string, \n    name: string, \n    dueDate: string, \n    todos: [],\n    inprogress: [],\n    done: []\n  }>;\n}\n\ninterface Props {\n  onSetActiveBoard: typeof actions.onSetActiveBoard;\n  activeBoard: number;\n  boardsList: Array<{\n    id: number, \n    img: string, \n    name: string, \n    dueDate: string, \n    todos: [],\n    inprogress: [],\n    done: []\n  }>;\n}\n\nconst actions = {\n  onSetActiveBoard: (val: string) => ({type: 'SET_ACTIVE_BOARD', payload: val})\n}\n\nclass App extends React.Component<Props> {\n\n  render () {\n    return (\n      <div className=\"app\">\n        <Sidebar /> \n        {/*<label>{this.props.boardsList.length.toString()}</label>\n        <button onClick={()=>this.props.onSetActiveBoard(this.props.boardsList.length.toString())}>CLICK</button>*/}\n\n        <Board \n          id={this.props.activeBoard}\n          boardsList={this.props.boardsList} \n        />\n      </div>\n    );\n\n  }\n\n}\n\nconst mapStateToProps = (state: AppState) => ({\n    activeBoard: state.activeBoard,\n    boardsList: state.boardsList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n      ...actions,\n    }, dispatch)\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}