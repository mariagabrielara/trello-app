{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Modals/BoardModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport './BoardModal.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nconst actions = {\n  onCreateNewBoard: val => ({\n    type: 'CREATE_NEW_BOARD',\n    payload: val\n  })\n};\n\nclass BoardModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardsList: this.props.boardsList,\n      newBoardName: 'Board Name',\n      newBoardImg: 'https://storage.googleapis.com/davivienda_tarjetas_virtual_imgs/alejandro_pineda.png',\n      newBoardDueDate: '01-01-20'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.props.closeModal();\n    return this.props.onCreateNewBoard({\n      id: this.props.boardsList.length + 1,\n      img: this.state.newBoardImg,\n      name: \"\".concat(this.state.newBoardName, \" \").concat(this.props.boardsList.length + 1),\n      dueDate: this.state.newBoardDueDate,\n      todos: [],\n      inprogress: [],\n      done: []\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"boardmodal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.modalIsOpen,\n      onRequestClose: () => this.props.closeModal(),\n      className: \"boardmodal__modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"boardmodal__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Create new board\"), React.createElement(\"div\", {\n      className: \"boardmodal__header boardmodal__header--close\",\n      onClick: () => this.props.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"form\", {\n      className: \"boardmodal__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"boardmodal__text-input\",\n      type: \"text\",\n      name: \"boardName\",\n      placeholder: \"Board Name\",\n      onChange: e => this.setState({\n        newBoardImg: e.target.value\n      }),\n      value: this.state.newBoardName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"boardmodal__date-input\",\n      type: \"date\",\n      id: \"board-due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"boardmodal__img-input\",\n      type: \"file\",\n      id: \"board-img\",\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"boardmodal__button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"+ Create Board\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  boardsList: state.boardsList\n});\n\nconst mapDispatchToProps = dispatch => _objectSpread({}, bindActionCreators(_objectSpread({}, actions), dispatch));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardModal);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Modals/BoardModal.tsx"],"names":["React","Modal","connect","bindActionCreators","actions","onCreateNewBoard","val","type","payload","BoardModal","Component","constructor","props","state","boardsList","newBoardName","newBoardImg","newBoardDueDate","handleSubmit","bind","closeModal","id","length","img","name","dueDate","todos","inprogress","done","render","modalIsOpen","e","setState","target","value","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nimport './BoardModal.scss';\nimport googleImage from '../../img/google.jpg';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface Board {\n  id: number, \n  img: string, \n  name: string, \n  dueDate: string, \n  todos: Array<Task>,\n  inprogress: Array<Task>,\n  done: Array<Task>\n}\n\ninterface Task {\n  taskId: number,\n  category: string,\n  taskName: string,\n  taskDueDate: string,\n  taskStatus: string\n}\n\ninterface BoardModalState {\n  boardsList: Array<Board>;\n  newBoardName: string;\n  newBoardImg: string;\n  newBoardDueDate: string;\n}\n\ninterface Props {\n    boardsList: Array<Board>;\n    modalIsOpen: boolean;\n    openModal: any;\n    closeModal: any;\n    onCreateNewBoard: typeof actions.onCreateNewBoard;\n}\n\nconst actions = {\n  onCreateNewBoard: (val: Board) => ({type: 'CREATE_NEW_BOARD', payload: val})\n}\n\nclass BoardModal extends React.Component<Props, BoardModalState> {\n\n    constructor(props: Props) {\n      super(props);\n      this.state = {\n        boardsList: this.props.boardsList,\n        newBoardName: 'Board Name',\n        newBoardImg: 'https://storage.googleapis.com/davivienda_tarjetas_virtual_imgs/alejandro_pineda.png',\n        newBoardDueDate: '01-01-20'\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n      this.props.closeModal();\n      return this.props.onCreateNewBoard(\n        {\n          id: this.props.boardsList.length + 1,\n          img: this.state.newBoardImg, \n          name: `${this.state.newBoardName} ${this.props.boardsList.length + 1}`, \n          dueDate: this.state.newBoardDueDate,\n          todos: [],\n          inprogress: [],\n          done: []\n        }\n      )\n    }\n\n    render () {\n      return (\n        <div className=\"boardmodal\">\n          <Modal\n            isOpen={this.props.modalIsOpen}\n            onRequestClose={()=>this.props.closeModal()}\n            className=\"boardmodal__modal\"\n          >\n            <h3 className=\"boardmodal__header\">Create new board</h3>\n            <div className=\"boardmodal__header boardmodal__header--close\" onClick={()=>this.props.closeModal()}>X</div>\n            <form className=\"boardmodal__form\">\n              <input className=\"boardmodal__text-input\" type=\"text\" name=\"boardName\" placeholder=\"Board Name\" \n                onChange={(e)=>this.setState({newBoardImg: e.target.value})} value={this.state.newBoardName}/>\n              <input className=\"boardmodal__date-input\" type=\"date\" id=\"board-due-date\" />\n              <input className=\"boardmodal__img-input\" type=\"file\" id=\"board-img\" accept=\"image/*\" />\n              <button \n                className=\"boardmodal__button\" \n                onClick={this.handleSubmit}\n                >\n                + Create Board\n              </button>\n            </form>\n          </Modal>\n        </div>\n      );\n    }   \n}\n\n\nconst mapStateToProps = (state: BoardModalState) => ({\n  boardsList: state.boardsList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n...bindActionCreators({\n    ...actions,\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardModal);"]},"metadata":{},"sourceType":"module"}