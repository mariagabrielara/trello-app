{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/DragDropComponent/DragDropComponent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './DragDropComponent.scss';\nimport Panel from '../Panel/Panel';\n\nclass DragDropComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragStart = (e, id) => {\n      console.log('dragstart:', id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDrop = (e, cat) => {\n      let id = e.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name == id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  initState() {\n    this.setState({\n      tasks: [{\n        name: \"A\",\n        category: \"todo\",\n        bgcolor: \"yellow\"\n      }, {\n        name: \"B\",\n        category: \"inprogress\",\n        bgcolor: \"pink\"\n      }, {\n        name: \"C\",\n        category: \"done\",\n        bgcolor: \"skyblue\"\n      }]\n    });\n  }\n\n  componentWillMount() {\n    this.initState();\n  }\n\n  render() {\n    let tasks = {\n      todo: [],\n      inprogress: [],\n      done: []\n    };\n    this.state.tasks.forEach(t => {\n      switch (t.category) {\n        case 'todo':\n          tasks.todo.push(React.createElement(\"div\", {\n            key: t.name,\n            onDragStart: e => this.onDragStart(e, t.name),\n            draggable: true,\n            className: \"draggable\",\n            style: {\n              backgroundColor: t.bgcolor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \" \", t.name, \" \"));\n          break;\n\n        case 'inprogress':\n          tasks.inprogress.push(React.createElement(\"div\", {\n            key: t.name,\n            onDragStart: e => this.onDragStart(e, t.name),\n            draggable: true,\n            className: \"draggable\",\n            style: {\n              backgroundColor: t.bgcolor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \" \", t.name, \" \"));\n          break;\n\n        case 'done':\n          tasks.done.push(React.createElement(\"div\", {\n            key: t.name,\n            onDragStart: e => this.onDragStart(e, t.name),\n            draggable: true,\n            className: \"draggable\",\n            style: {\n              backgroundColor: t.bgcolor\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \" \", t.name, \" \"));\n          break;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"container-drag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wip\",\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"todo\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"todo\"), tasks.todo), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"inprogress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"inprogress\"), tasks.inprogress), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => this.onDrop(e, \"done\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"done\"), tasks.done), React.createElement(Panel, {\n      tasksList: tasks.inprogress,\n      panelTitle: \"IN PROGRESS\",\n      panelQuantity: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DragDropComponent;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/DragDropComponent/DragDropComponent.tsx"],"names":["React","Panel","DragDropComponent","Component","onDragStart","e","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","name","category","setState","initState","bgcolor","componentWillMount","render","todo","inprogress","done","forEach","t","push","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './DragDropComponent.scss';\n\nimport Panel from '../Panel/Panel';\n\ninterface DDState {\n    tasks: { name: string, category: any, bgcolor: string }[]\n}\n\nclass DragDropComponent extends React.Component<{}, DDState> {\n\n    initState() {\n        this.setState({\n            tasks: [\n                {name: \"A\", category: \"todo\", bgcolor: \"yellow\"},\n                {name: \"B\", category: \"inprogress\", bgcolor: \"pink\"},\n                {name: \"C\", category: \"done\", bgcolor: \"skyblue\"}\n            ]\n        });\n    }\n\n    componentWillMount() {\n        this.initState();\n    }\n\n    onDragStart = (e: React.DragEvent, id: string) => {\n        console.log('dragstart:', id);\n        e.dataTransfer.setData(\"id\",id);\n    }\n\n    onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    onDrop = (e: React.DragEvent, cat: string) => {\n        let id = e.dataTransfer.getData(\"id\");\n        let tasks = this.state.tasks.filter((task) => {\n            if (task.name == id) {\n                task.category = cat;\n            }\n            return task;\n        });\n\n        this.setState({\n            ...this.state,\n            tasks\n        });\n    }\n\n    render() {\n        let tasks: {todo: Array<JSX.Element>, inprogress: Array<JSX.Element>, done: Array<JSX.Element>} = {\n            todo: [],\n            inprogress: [],\n            done: []\n        }\n\n        this.state.tasks.forEach((t) => {\n            switch (t.category) {\n                case 'todo':\n                    tasks.todo.push( \n                        <div \n                            key={t.name} \n                            onDragStart={(e) => this.onDragStart(e, t.name)} \n                            draggable \n                            className=\"draggable\" \n                            style={{backgroundColor: t.bgcolor}}> {t.name} </div>\n                    );\n                break;\n\n                case 'inprogress':\n                    tasks.inprogress.push( \n                        <div \n                            key={t.name} \n                            onDragStart={(e) => this.onDragStart(e, t.name)} \n                            draggable \n                            className=\"draggable\" \n                            style={{backgroundColor: t.bgcolor}}> {t.name} </div>\n                    );\n                break;\n\n                case 'done':\n                    tasks.done.push( \n                        <div \n                            key={t.name} \n                            onDragStart={(e) => this.onDragStart(e, t.name)} \n                            draggable \n                            className=\"draggable\" \n                            style={{backgroundColor: t.bgcolor}}> {t.name} </div>\n                    );\n                break;\n            }\n            \n        });\n\n        return (\n            <div className=\"container-drag\">\n                <div className=\"wip\" \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"todo\")}}>\n                    <span className=\"task-header\">todo</span>\n                    {tasks.todo}\n                </div>\n                <div\n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"inprogress\")}}>\n                    <span className=\"task-header\">inprogress</span>\n                    {tasks.inprogress}\n                </div>\n                <div className=\"droppable\" \n                    onDragOver={(e)=>this.onDragOver(e)} \n                    onDrop={(e)=>this.onDrop(e, \"done\")}>\n                    <span className=\"task-header\">done</span>\n                    {tasks.done}\n                </div>\n                <Panel \n                    tasksList={tasks.inprogress}\n                    panelTitle=\"IN PROGRESS\"\n                    panelQuantity={10}\n                />\n            </div>\n        );\n    }\n}\n\nexport default DragDropComponent;"]},"metadata":{},"sourceType":"module"}