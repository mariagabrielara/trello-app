{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './Board.scss';\nimport Panel from '../Panel/Panel';\nimport Task from '../Task/Task';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragStart = (e, id) => {\n      console.log('dragstart:', id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDrop = (e, cat) => {\n      let id = e.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.key === id) {\n          task.panel = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  initState() {\n    this.setState({\n      tasks: [{\n        key: Math.random().toString(),\n        panel: \"todo\",\n        taskComponent: React.createElement(Task, {\n          taskCategory: \"TD\",\n          taskName: \"TD 1\",\n          taskDate: \"1-1-19\",\n          taskStatus: \"Active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })\n      }, {\n        key: Math.random().toString(),\n        panel: \"inprogress\",\n        taskComponent: React.createElement(Task, {\n          taskCategory: \"IP\",\n          taskName: \"IP 1\",\n          taskDate: \"1-1-19\",\n          taskStatus: \"Active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })\n      }]\n    });\n  }\n\n  componentWillMount() {\n    this.initState();\n  }\n\n  render() {\n    let tasks = {\n      todo: [],\n      inprogress: [],\n      done: []\n    };\n    this.state.tasks.forEach(t => {\n      switch (t.panel) {\n        case 'todo':\n          tasks.todo.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'inprogress':\n          tasks.inprogress.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'done':\n          tasks.done.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.props.boardName), React.createElement(\"div\", {\n      className: \"board__due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Due date: \", this.props.boardDueDate), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"todo\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.todo,\n      panelTitle: \"TODO\",\n      panelQuantity: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"inprogress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.inprogress,\n      panelTitle: \"IN PROGRESS\",\n      panelQuantity: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"done\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.done,\n      panelTitle: \"DONE\",\n      panelQuantity: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  boardsList: state.boardsList\n});\n\nexport default Board;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx"],"names":["React","Panel","Task","Board","Component","onDragStart","e","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","key","panel","setState","initState","Math","random","toString","taskComponent","componentWillMount","render","todo","inprogress","done","forEach","t","push","props","boardName","boardDueDate","mapStateToProps","boardsList"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Board.scss';\n\nimport Panel from '../Panel/Panel';\nimport Task from '../Task/Task';\n\ninterface Props {\n    id: number\n}\n\ninterface BoardData {\n    boardsList: Array<{}>;\n}\n\ninterface BoardState {\n    tasks: { key: string, panel: string, taskComponent: JSX.Element }[]\n}\n\nclass Board extends React.Component<Props, BoardState> {\n\n    initState() {\n        this.setState({\n            tasks: [\n                {   \n                    key: Math.random().toString(), \n                    panel: \"todo\", \n                    taskComponent: (\n                        <Task\n                            taskCategory=\"TD\"\n                            taskName=\"TD 1\"\n                            taskDate=\"1-1-19\"\n                            taskStatus=\"Active\"\n                        />\n                    )\n                },\n                {   \n                    key: Math.random().toString(), \n                    panel: \"inprogress\", \n                    taskComponent: (\n                        <Task\n                            taskCategory=\"IP\"\n                            taskName=\"IP 1\"\n                            taskDate=\"1-1-19\"\n                            taskStatus=\"Active\"\n                        />\n                    )\n                }\n            ]\n        });\n    }\n\n    componentWillMount() {\n        this.initState();\n    }\n\n    onDragStart = (e: React.DragEvent, id: string) => {\n        console.log('dragstart:', id);\n        e.dataTransfer.setData(\"id\",id);\n    }\n\n    onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    onDrop = (e: React.DragEvent, cat: string) => {\n        let id = e.dataTransfer.getData(\"id\");\n        let tasks = this.state.tasks.filter((task) => {\n            if (task.key === id) {\n                task.panel = cat;\n            }\n            return task;\n        });\n\n        this.setState({\n            ...this.state,\n            tasks\n        });\n    }\n\n    render () {\n\n        let tasks: {\n            todo: Array<JSX.Element>, \n            inprogress: Array<JSX.Element>, \n            done: Array<JSX.Element>} = {\n                todo: [],\n                inprogress: [],\n                done: []\n        }\n\n        this.state.tasks.forEach((t) => {\n            switch (t.panel) {\n                case 'todo':\n                    tasks.todo.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'inprogress':\n                    tasks.inprogress.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'done':\n                    tasks.done.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n            }\n            \n        });\n\n        return (\n            <div className=\"board\">\n                <div className=\"board__name\">{this.props.boardName}</div>\n                <div className=\"board__due-date\">Due date: {this.props.boardDueDate}</div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"todo\")}}>\n                    <Panel \n                        tasksList={tasks.todo}\n                        panelTitle=\"TODO\"\n                        panelQuantity={10}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"inprogress\")}}>\n                    <Panel \n                        tasksList={tasks.inprogress}\n                        panelTitle=\"IN PROGRESS\"\n                        panelQuantity={10}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"done\")}}>\n                    <Panel \n                        tasksList={tasks.done}\n                        panelTitle=\"DONE\"\n                        panelQuantity={10}\n                    />\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state: BoardData) => ({\n    boardsList: state.boardsList\n})\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}