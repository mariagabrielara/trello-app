{"ast":null,"code":"var _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Modals/TaskModal.tsx\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport './TaskModal.scss';\nimport { connect } from 'react-redux';\n\nclass TaskModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBoard: this.props.board,\n      newTaskCategory: 'Task Category',\n      newTaskName: 'Task Name',\n      newTaskDueDate: 'Task Date',\n      newTaskStatus: 'Task Status'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.props.closeModal(); // return this.props.onCreateNewTask(\n    //   {\n    //     task: {\n    //       taskId: Math.random(),\n    //       category: this.state.newTaskCategory,\n    //       taskName: this.state.newTaskName,\n    //       taskDueDate: this.state.newTaskDueDate,\n    //       taskStatus: this.state.newTaskStatus\n    //     },\n    //     panel: ''\n    //   }\n    // )\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"taskmodal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.taskModalIsOpen,\n      onRequestClose: () => this.props.closeModal(),\n      className: \"taskmodal__modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"taskmodal__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Create new task\"), React.createElement(\"div\", {\n      className: \"taskmodal__header taskmodal__header--close\",\n      onClick: () => this.props.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"form\", {\n      className: \"taskmodal__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"taskmodal__text-input\",\n      type: \"text\",\n      name: \"task-category\",\n      placeholder: \"Category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"taskmodal__text-input\",\n      type: \"text\",\n      name: \"task-name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"taskmodal__date-input\",\n      type: \"date\",\n      name: \"task-due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"taskmodal__text-input\",\n      type: \"text\",\n      name: \"task-status\",\n      placeholder: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"taskmodal__button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"+ Add Task\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  activeBoard: state.activeBoard,\n  boardsList: state.boardsList\n}); // const mapDispatchToProps = (dispatch: any) => ({\n// ...bindActionCreators({\n//     ...actions,\n//   }, dispatch)\n// });\n//export default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\n\n\nexport default connect(mapStateToProps)(TaskModal);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Modals/TaskModal.tsx"],"names":["React","Modal","connect","TaskModal","Component","constructor","props","state","currentBoard","board","newTaskCategory","newTaskName","newTaskDueDate","newTaskStatus","handleSubmit","bind","closeModal","render","taskModalIsOpen","mapStateToProps","activeBoard","boardsList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,kBAAP;AAGA,SAASC,OAAT,QAAwB,aAAxB;;AA6CA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAA+D;AAE7DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,KADd;AAEXC,MAAAA,eAAe,EAAE,eAFN;AAGXC,MAAAA,WAAW,EAAE,WAHF;AAIXC,MAAAA,cAAc,EAAE,WAJL;AAKXC,MAAAA,aAAa,EAAE;AALJ,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,SAAKR,KAAL,CAAWU,UAAX,GADa,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,eADrB;AAEE,MAAA,cAAc,EAAE,MAAI,KAAKZ,KAAL,CAAWU,UAAX,EAFtB;AAGE,MAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,EAME;AAAK,MAAA,SAAS,EAAC,4CAAf;AAA4D,MAAA,OAAO,EAAE,MAAI,KAAKV,KAAL,CAAWU,UAAX,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAOE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAC,eAA1D;AAA0E,MAAA,WAAW,EAAC,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAC,WAA1D;AAAsE,MAAA,WAAW,EAAC,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAC,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAO,MAAA,SAAS,EAAC,uBAAjB;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,IAAI,EAAC,aAA1D;AAAwE,MAAA,WAAW,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,KAAKF,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CAPF,CADF,CADF;AAmBD;;AAlD4D;;AAqD/D,MAAMK,eAAe,GAAIZ,KAAD,KAAyB;AAC/Ca,EAAAA,WAAW,EAAEb,KAAK,CAACa,WAD4B;AAE/CC,EAAAA,UAAU,EAAEd,KAAK,CAACc;AAF6B,CAAzB,CAAxB,C,CAKA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBhB,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nimport './TaskModal.scss';\nimport Board from '../Board/Board';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface GlobalState {\n  activeBoard: number;\n  boardsList: Array<Board>;\n}\n\ninterface TaskModalState {\n  currentBoard: BoardStructure;\n  newTaskCategory: string;\n  newTaskName: string;\n  newTaskDueDate: string;\n  newTaskStatus: string;\n}\n// const actions = {\n//   onCreateNewTask: (val: {task: Task, panel: string}) => ({type: 'CREATE_NEW_TASK', payload: val})\n// }\n\ninterface Props {\n    taskModalIsOpen: boolean;\n    openModal: any;\n    closeModal: any;\n    board: BoardStructure;\n    // onCreateNewTask: typeof actions.onCreateNewTask;\n}\n\ninterface Task {\n  taskId: number,\n  category: string,\n  taskName: string,\n  taskDueDate: string,\n  taskStatus: string\n}\n\ninterface BoardStructure {\n  id: number, \n  img: string, \n  name: string, \n  dueDate: string, \n  todos: Array<Task>,\n  inprogress: Array<Task>,\n  done: Array<Task>\n}\n\nclass TaskModal extends React.Component<Props, TaskModalState> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentBoard: this.props.board,\n      newTaskCategory: 'Task Category',\n      newTaskName: 'Task Name',\n      newTaskDueDate: 'Task Date',\n      newTaskStatus: 'Task Status'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.props.closeModal();\n    // return this.props.onCreateNewTask(\n    //   {\n    //     task: {\n    //       taskId: Math.random(),\n    //       category: this.state.newTaskCategory,\n    //       taskName: this.state.newTaskName,\n    //       taskDueDate: this.state.newTaskDueDate,\n    //       taskStatus: this.state.newTaskStatus\n    //     },\n    //     panel: ''\n    //   }\n    // )\n  }\n\n  render () {\n    return (\n      <div className=\"taskmodal\">\n        <Modal\n          isOpen={this.props.taskModalIsOpen}\n          onRequestClose={()=>this.props.closeModal()}\n          className=\"taskmodal__modal\"\n        >\n          <h3 className=\"taskmodal__header\">Create new task</h3>\n          <div className=\"taskmodal__header taskmodal__header--close\" onClick={()=>this.props.closeModal()}>X</div>\n          <form className=\"taskmodal__form\">\n            <input className=\"taskmodal__text-input\" type=\"text\" name=\"task-category\" placeholder=\"Category\" />\n            <input className=\"taskmodal__text-input\" type=\"text\" name=\"task-name\" placeholder=\"Name\" />\n            <input className=\"taskmodal__date-input\" type=\"date\" name=\"task-due-date\" />\n            <input className=\"taskmodal__text-input\" type=\"text\" name=\"task-status\" placeholder=\"Status\" />\n            <button className=\"taskmodal__button\" onClick={this.handleSubmit}>+ Add Task</button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }     \n}\n\nconst mapStateToProps = (state: GlobalState) => ({\n  activeBoard: state.activeBoard,\n  boardsList: state.boardsList\n})\n\n// const mapDispatchToProps = (dispatch: any) => ({\n// ...bindActionCreators({\n//     ...actions,\n//   }, dispatch)\n// });\n\n//export default connect(mapStateToProps, mapDispatchToProps)(TaskModal);\nexport default connect(mapStateToProps)(TaskModal);"]},"metadata":{},"sourceType":"module"}