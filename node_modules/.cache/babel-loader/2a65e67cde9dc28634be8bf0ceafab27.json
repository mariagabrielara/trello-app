{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Sidebar/Sidebar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './Sidebar.scss';\nimport BoardCard from '../BoardCard/BoardCard';\nimport Button from '../Button/Button';\nimport BoardModal from '../Modals/BoardModal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nconst actions = {\n  onSetActiveBoard: val => ({\n    type: 'SET_ACTIVE_BOARD',\n    payload: val\n  })\n};\n\nclass Sidebar extends React.Component {\n  initState() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.initState();\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Boards\"), React.createElement(\"ul\", {\n      className: \"sidebar__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.boardsList.map(b => React.createElement(\"li\", {\n      className: \"sidebar__element\",\n      key: b.id,\n      onClick: () => this.props.onSetActiveBoard(b.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(BoardCard, {\n      imgUrl: b.img,\n      boardTitle: b.name,\n      todos: this.props.todosQuantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonText: \"+ Create Board\",\n      buttonType: \"button--bottom\",\n      openModal: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(BoardModal, {\n      modalIsOpen: this.state.modalIsOpen,\n      openModal: this.openModal,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  boardsList: state.boardsList,\n  todosQuantity: state.todosQuantity\n});\n\nconst mapDispatchToProps = dispatch => _objectSpread({}, bindActionCreators(_objectSpread({}, actions), dispatch));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Sidebar/Sidebar.tsx"],"names":["React","BoardCard","Button","BoardModal","connect","bindActionCreators","actions","onSetActiveBoard","val","type","payload","Sidebar","Component","initState","setState","modalIsOpen","UNSAFE_componentWillMount","openModal","bind","closeModal","render","props","boardsList","map","b","id","img","name","todosQuantity","state","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Sidebar.scss';\nimport BoardCard from '../BoardCard/BoardCard';\nimport Button from '../Button/Button';\n\nimport BoardModal from '../Modals/BoardModal';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface SidebarState {\n    modalIsOpen: boolean;\n}\n\ninterface Props {\n    boardsList: Array<{\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }>;\n    onSetActiveBoard: typeof actions.onSetActiveBoard;\n    todosQuantity: number;\n}\n\nconst actions = {\n    onSetActiveBoard: (val: number) => ({type: 'SET_ACTIVE_BOARD', payload: val})\n}\n\nclass Sidebar extends React.Component<Props, SidebarState> {\n\n    initState() {\n        this.setState({\n          modalIsOpen: false\n        });\n    }\n    \n    UNSAFE_componentWillMount() {\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.initState();\n    }\n\n    openModal() {\n        this.setState({\n            modalIsOpen: true\n        });\n    }\n     \n    closeModal() {\n        this.setState({\n            modalIsOpen: false\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"sidebar\">\n                <div className=\"sidebar__title\">Boards</div>\n                <ul className=\"sidebar__list\">\n                    {this.props.boardsList.map((b) => (\n                        <li className=\"sidebar__element\" key={b.id} onClick={()=>this.props.onSetActiveBoard(b.id)}>\n                            <BoardCard \n                                imgUrl={b.img}\n                                boardTitle={b.name}\n                                todos={this.props.todosQuantity} />\n                        </li>\n                    ))}\n                </ul>\n                <div>\n                    <Button \n                        buttonText=\"+ Create Board\"\n                        buttonType=\"button--bottom\"\n                        openModal={this.openModal}\n                    />\n                </div>\n                <BoardModal \n                    modalIsOpen={this.state.modalIsOpen}\n                    openModal={this.openModal}\n                    closeModal={this.closeModal}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: Props) => ({\n    boardsList: state.boardsList,\n    todosQuantity: state.todosQuantity\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    ...bindActionCreators({\n        ...actions,\n      }, dispatch)\n    });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);"]},"metadata":{},"sourceType":"module"}