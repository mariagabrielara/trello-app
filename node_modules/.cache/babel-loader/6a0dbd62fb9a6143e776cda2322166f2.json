{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  activeBoard: 0,\n  boardsList: []\n};\n\nconst reducer = (state = initialState, action) => {\n  const addTaskToActiveBoardObject = action => {\n    let currentBoard = state.boardsList.filter(b => b.id === state.activeBoard)[0];\n\n    switch (action.payload.panel) {\n      case 'todos':\n        currentBoard.todos.push(action.payload.task);\n        break;\n\n      case 'inprogress':\n        currentBoard.inprogress.push(action.payload.task);\n        break;\n\n      case 'done':\n        currentBoard.done.push(action.payload.task);\n        break;\n\n      default:\n        currentBoard.todos.push(action.payload.task);\n        break;\n    }\n\n    console.log(state);\n  };\n\n  switch (action.type) {\n    case 'SET_ACTIVE_BOARD':\n      return _objectSpread({}, state, {\n        activeBoard: action.payload\n      });\n\n    case 'CREATE_NEW_BOARD':\n      return _objectSpread({}, state, {\n        activeBoard: action.payload.id,\n        boardsList: [...state.boardsList, action.payload]\n      });\n\n    case 'CREATE_NEW_TASK':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/store/reducer.tsx"],"names":["initialState","activeBoard","boardsList","reducer","state","action","addTaskToActiveBoardObject","currentBoard","filter","b","id","payload","panel","todos","push","task","inprogress","done","console","log","type"],"mappings":";;;;;;AA4BA,MAAMA,YAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAE,CADW;AAExBC,EAAAA,UAAU,EAAE;AAFY,CAA5B;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAY,GAAGJ,YAAhB,EAA8BK,MAA9B,KAAiD;AAE7D,QAAMC,0BAA0B,GAAID,MAAD,IAAoB;AAEnD,QAAIE,YAAmB,GAAIH,KAAK,CAACF,UAAN,CAAiBM,MAAjB,CAAyBC,CAAD,IAAKA,CAAC,CAACC,EAAF,KAAON,KAAK,CAACH,WAA1C,CAAD,CAAyD,CAAzD,CAA1B;;AACA,YAAQI,MAAM,CAACM,OAAP,CAAeC,KAAvB;AACI,WAAK,OAAL;AACIL,QAAAA,YAAY,CAACM,KAAb,CAAmBC,IAAnB,CAAwBT,MAAM,CAACM,OAAP,CAAeI,IAAvC;AACA;;AACJ,WAAK,YAAL;AACIR,QAAAA,YAAY,CAACS,UAAb,CAAwBF,IAAxB,CAA6BT,MAAM,CAACM,OAAP,CAAeI,IAA5C;AACA;;AACJ,WAAK,MAAL;AACIR,QAAAA,YAAY,CAACU,IAAb,CAAkBH,IAAlB,CAAuBT,MAAM,CAACM,OAAP,CAAeI,IAAtC;AACA;;AACJ;AACIR,QAAAA,YAAY,CAACM,KAAb,CAAmBC,IAAnB,CAAwBT,MAAM,CAACM,OAAP,CAAeI,IAAvC;AACA;AAZR;;AAcAG,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACH,GAlBD;;AAoBA,UAAQC,MAAM,CAACe,IAAf;AACI,SAAK,kBAAL;AACI,+BACOhB,KADP;AAEIH,QAAAA,WAAW,EAAEI,MAAM,CAACM;AAFxB;;AAKJ,SAAK,kBAAL;AACI,+BACOP,KADP;AAEIH,QAAAA,WAAW,EAAEI,MAAM,CAACM,OAAP,CAAeD,EAFhC;AAGIR,QAAAA,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAV,EAAsBG,MAAM,CAACM,OAA7B;AAHhB;;AAKJ,SAAK,iBAAL;AACI,+BACOP,KADP;;AAGJ;AACI,aAAOA,KAAP;AAlBR;AAoBH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["interface Action {\n    type: string;\n    payload: any;\n}\n\ninterface Board {\n    id: number, \n    img: string, \n    name: string, \n    dueDate: string, \n    todos: Array<Task>,\n    inprogress: Array<Task>,\n    done: Array<Task>\n}\n\ninterface Task {\n    taskId: number,\n    category: string,\n    taskName: string,\n    taskDueDate: string,\n    taskStatus: string\n}\n\ninterface State {\n    activeBoard: number;\n    boardsList: Array<Board>;\n}\n\nconst initialState: State = {\n    activeBoard: 0,\n    boardsList: []\n};\n\nconst reducer = (state: State = initialState, action: Action) => {\n\n    const addTaskToActiveBoardObject = (action: Action) => {\n\n        let currentBoard: Board = (state.boardsList.filter((b)=>b.id===state.activeBoard))[0];\n        switch (action.payload.panel) {\n            case 'todos':\n                currentBoard.todos.push(action.payload.task);\n                break;\n            case 'inprogress':\n                currentBoard.inprogress.push(action.payload.task);\n                break;\n            case 'done':\n                currentBoard.done.push(action.payload.task);\n                break;\n            default:\n                currentBoard.todos.push(action.payload.task);\n                break;\n        }\n        console.log(state);\n    }\n\n    switch (action.type) {\n        case 'SET_ACTIVE_BOARD':\n            return {\n                ...state,\n                activeBoard: action.payload\n            }\n\n        case 'CREATE_NEW_BOARD':\n            return {\n                ...state,\n                activeBoard: action.payload.id,\n                boardsList: [...state.boardsList, action.payload]\n            }\n        case 'CREATE_NEW_TASK':\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}