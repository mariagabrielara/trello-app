{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Modals/BoardModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport './BoardModal.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nconst actions = {\n  onCreateNewBoard: val => ({\n    type: 'CREATE_NEW_BOARD',\n    payload: val\n  })\n};\n\nclass BoardModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardsList: this.props.boardsList,\n      newBoardName: '',\n      newBoardImg: '',\n      newBoardDueDate: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {}\n\n  handleSubmit(e) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"boardmodal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.props.modalIsOpen,\n      onRequestClose: () => this.props.closeModal(),\n      className: \"boardmodal__modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"boardmodal__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Create new board\"), React.createElement(\"div\", {\n      className: \"boardmodal__header boardmodal__header--close\",\n      onClick: () => this.props.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"form\", {\n      className: \"boardmodal__form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"boardmodal__text-input\",\n      type: \"text\",\n      name: \"boardName\",\n      placeholder: \"Board Name\",\n      value: this.state.newBoardName,\n      onChange: e => this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"boardmodal__date-input\",\n      type: \"date\",\n      id: \"board-due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"boardmodal__img-input\",\n      type: \"file\",\n      id: \"board-img\",\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"boardmodal__button\",\n      onClick: () => {\n        this.props.closeModal();\n        this.onSubmit();\n        return this.props.onCreateNewBoard({\n          img: 'https://storage.googleapis.com/davivienda_tarjetas_virtual_imgs/alejandro_pineda.png',\n          name: \"Super Board\",\n          dueDate: \"01-01-19\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"+ Create Board\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  boardsList: state.boardsList\n});\n\nconst mapDispatchToProps = dispatch => _objectSpread({}, bindActionCreators(_objectSpread({}, actions), dispatch));\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardModal);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Modals/BoardModal.tsx"],"names":["React","Modal","connect","bindActionCreators","actions","onCreateNewBoard","val","type","payload","BoardModal","Component","constructor","props","state","boardsList","newBoardName","newBoardImg","newBoardDueDate","handleSubmit","bind","handleChange","e","render","modalIsOpen","closeModal","onSubmit","img","name","dueDate","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nimport './BoardModal.scss';\nimport googleImage from '../../img/google.jpg';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\ninterface BoardModalState {\n  boardsList: Array<{}>;\n  newBoardName: string;\n  newBoardImg: string;\n  newBoardDueDate: string;\n}\n\ninterface Props {\n    boardsList: Array<{}>;\n    modalIsOpen: boolean;\n    openModal: any;\n    closeModal: any;\n    onCreateNewBoard: typeof actions.onCreateNewBoard;\n}\n\nconst actions = {\n  onCreateNewBoard: (val: {img: string, name: string, dueDate: string}) => ({type: 'CREATE_NEW_BOARD', payload: val})\n}\n\nclass BoardModal extends React.Component<Props, BoardModalState> {\n\n    constructor(props: Props) {\n      super(props);\n\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    state: BoardModalState = {\n      boardsList: this.props.boardsList,\n      newBoardName: '',\n      newBoardImg: '',\n      newBoardDueDate: ''\n    };\n\n    handleChange(e: Event) {\n\n    }\n\n    handleSubmit(e: Event) {\n\n    }\n\n    render () {\n      return (\n        <div className=\"boardmodal\">\n          <Modal\n            isOpen={this.props.modalIsOpen}\n            onRequestClose={()=>this.props.closeModal()}\n            className=\"boardmodal__modal\"\n          >\n            <h3 className=\"boardmodal__header\">Create new board</h3>\n            <div className=\"boardmodal__header boardmodal__header--close\" onClick={()=>this.props.closeModal()}>X</div>\n            <form className=\"boardmodal__form\">\n              <input className=\"boardmodal__text-input\" type=\"text\" name=\"boardName\" placeholder=\"Board Name\" value={this.state.newBoardName} onChange={(e)=>this.handleChange.bind(this)} />\n              <input className=\"boardmodal__date-input\" type=\"date\" id=\"board-due-date\" />\n              <input className=\"boardmodal__img-input\" type=\"file\" id=\"board-img\" accept=\"image/*\" />\n              <button \n                className=\"boardmodal__button\" \n                onClick={()=>{\n                  this.props.closeModal();\n                  this.onSubmit();\n                  return this.props.onCreateNewBoard(\n                    {\n                      img: 'https://storage.googleapis.com/davivienda_tarjetas_virtual_imgs/alejandro_pineda.png', \n                      name: \"Super Board\", \n                      dueDate: \"01-01-19\"\n                    }\n                  )\n                }}\n                >\n                + Create Board\n              </button>\n            </form>\n          </Modal>\n        </div>\n      );\n    }   \n}\n\n\nconst mapStateToProps = (state: BoardModalState) => ({\n  boardsList: state.boardsList\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n...bindActionCreators({\n    ...actions,\n  }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardModal);"]},"metadata":{},"sourceType":"module"}