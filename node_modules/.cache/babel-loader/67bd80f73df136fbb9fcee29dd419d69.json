{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  activeBoard: 0,\n  boardsList: [],\n  activeBoardData: [{\n    id: 0,\n    img: '',\n    name: '',\n    dueDate: '',\n    tasks: []\n  }]\n};\n\nconst getActiveBoardData = state => {\n  return state.boardsList.filter(item => item.id === state.activeBoard);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_ACTIVE_BOARD':\n      return _objectSpread({}, state, {\n        activeBoard: action.payload,\n        activeBoardData: getActiveBoardData(state)\n      });\n\n    case 'CREATE_NEW_BOARD':\n      return _objectSpread({}, state, {\n        activeBoard: action.payload.id,\n        boardsList: [...state.boardsList, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/store/reducer.tsx"],"names":["initialState","activeBoard","boardsList","activeBoardData","id","img","name","dueDate","tasks","getActiveBoardData","state","filter","item","reducer","action","type","payload"],"mappings":";;;;;;AA2BA,MAAMA,YAAmB,GAAG;AACxBC,EAAAA,WAAW,EAAE,CADW;AAExBC,EAAAA,UAAU,EAAE,EAFY;AAGxBC,EAAAA,eAAe,EAAE,CAAC;AACdC,IAAAA,EAAE,EAAE,CADU;AAEdC,IAAAA,GAAG,EAAE,EAFS;AAGdC,IAAAA,IAAI,EAAE,EAHQ;AAIdC,IAAAA,OAAO,EAAE,EAJK;AAKdC,IAAAA,KAAK,EAAE;AALO,GAAD;AAHO,CAA5B;;AAYA,MAAMC,kBAAkB,GAAIC,KAAD,IAAkB;AACzC,SAAOA,KAAK,CAACR,UAAN,CAAiBS,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYM,KAAK,CAACT,WAApD,CAAP;AACH,CAFD;;AAIA,MAAMY,OAAO,GAAG,CAACH,KAAY,GAAGV,YAAhB,EAA8Bc,MAA9B,KAAiD;AAE7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,+BACOL,KADP;AAEIT,QAAAA,WAAW,EAAEa,MAAM,CAACE,OAFxB;AAGIb,QAAAA,eAAe,EAAEM,kBAAkB,CAACC,KAAD;AAHvC;;AAKJ,SAAK,kBAAL;AACI,+BACOA,KADP;AAEIT,QAAAA,WAAW,EAAEa,MAAM,CAACE,OAAP,CAAeZ,EAFhC;AAGIF,QAAAA,UAAU,EAAE,CAAC,GAAGQ,KAAK,CAACR,UAAV,EAAsBY,MAAM,CAACE,OAA7B;AAHhB;;AAKJ;AACI,aAAON,KAAP;AAdR;AAgBH,CAlBD;;AAoBA,eAAeG,OAAf","sourcesContent":["interface Action {\n    type: string;\n    payload: any;\n}\n\ninterface Board {\n    id: number, \n    img: string, \n    name: string, \n    dueDate: string, \n    tasks: Array<Task>\n}\n\ninterface Task {\n    taskId: number,\n    category: string,\n    taskName: string,\n    taskDueDate: string,\n    taskStatus: string\n}\n\ninterface State {\n    activeBoard: number;\n    boardsList: Array<Board>;\n    activeBoardData: Array<Board>\n}\n\nconst initialState: State = {\n    activeBoard: 0,\n    boardsList: [],\n    activeBoardData: [{\n        id: 0, \n        img: '', \n        name: '', \n        dueDate: '', \n        tasks: []\n    }]\n};\n\nconst getActiveBoardData = (state: State) => {\n    return state.boardsList.filter((item) => item.id === state.activeBoard);\n}\n\nconst reducer = (state: State = initialState, action: Action) => {\n\n    switch (action.type) {\n        case 'SET_ACTIVE_BOARD':\n            return {\n                ...state,\n                activeBoard: action.payload,\n                activeBoardData: getActiveBoardData(state)\n            }\n        case 'CREATE_NEW_BOARD':\n            return {\n                ...state,\n                activeBoard: action.payload.id,\n                boardsList: [...state.boardsList, action.payload]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}