{"ast":null,"code":"var _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Sidebar/Sidebar.tsx\";\nimport React from 'react';\nimport './Sidebar.scss';\nimport BoardCard from '../BoardCard/BoardCard';\nimport Button from '../Button/Button';\nimport BoardModal from '../Modals/BoardModal';\nimport { connect } from 'react-redux';\nconst actions = {\n  onSetActiveBoard: val => ({\n    type: 'SET_ACTIVE_BOARD',\n    payload: val\n  })\n};\n\nclass Sidebar extends React.Component {\n  initState() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.initState();\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  changeActiveBoard(boardId) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Boards\"), React.createElement(\"ul\", {\n      className: \"sidebar__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.boardsList.map(b => React.createElement(\"li\", {\n      className: \"sidebar__element\",\n      key: b.id,\n      onClick: () => alert(b.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(BoardCard, {\n      imgUrl: b.img,\n      boardTitle: b.name,\n      todos: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonText: \"+ Create Board\",\n      buttonType: \"button--bottom\",\n      openModal: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(BoardModal, {\n      modalIsOpen: this.state.modalIsOpen,\n      openModal: this.openModal,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  boardsList: state.boardsList\n});\n\nexport default connect(mapStateToProps)(Sidebar);","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Sidebar/Sidebar.tsx"],"names":["React","BoardCard","Button","BoardModal","connect","actions","onSetActiveBoard","val","type","payload","Sidebar","Component","initState","setState","modalIsOpen","UNSAFE_componentWillMount","openModal","bind","closeModal","changeActiveBoard","boardId","render","props","boardsList","map","b","id","alert","img","name","state","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAmBA,MAAMC,OAAO,GAAG;AACZC,EAAAA,gBAAgB,EAAGC,GAAD,KAAkB;AAACC,IAAAA,IAAI,EAAE,kBAAP;AAA2BC,IAAAA,OAAO,EAAEF;AAApC,GAAlB;AADN,CAAhB;;AAIA,MAAMG,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAA2D;AAEvDC,EAAAA,SAAS,GAAG;AACR,SAAKC,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAE;AADD,KAAd;AAGH;;AAEDC,EAAAA,yBAAyB,GAAG;AACxB,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKL,SAAL;AACH;;AAEDI,EAAAA,SAAS,GAAG;AACR,SAAKH,QAAL,CAAc;AACVC,MAAAA,WAAW,EAAE;AADH,KAAd;AAGH;;AAEDI,EAAAA,UAAU,GAAG;AACT,SAAKL,QAAL,CAAc;AACVC,MAAAA,WAAW,EAAE;AADH,KAAd;AAGH;;AAGDK,EAAAA,iBAAiB,CAACC,OAAD,EAAkB,CAElC;;AAEDC,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA2BC,CAAD,IACvB;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAiC,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAxC;AAA4C,MAAA,OAAO,EAAE,MAAIC,KAAK,CAACF,CAAC,CAACC,EAAH,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAED,CAAC,CAACG,GADd;AAEI,MAAA,UAAU,EAAEH,CAAC,CAACI,IAFlB;AAGI,MAAA,KAAK,EAAE,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,UAAU,EAAC,gBADf;AAEI,MAAA,UAAU,EAAC,gBAFf;AAGI,MAAA,SAAS,EAAE,KAAKb,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAZJ,EAmBI,oBAAC,UAAD;AACI,MAAA,WAAW,EAAE,KAAKc,KAAL,CAAWhB,WAD5B;AAEI,MAAA,SAAS,EAAE,KAAKE,SAFpB;AAGI,MAAA,UAAU,EAAE,KAAKE,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ;AA2BH;;AA3DsD;;AA8D3D,MAAMa,eAAe,GAAID,KAAD,KAAmB;AACvCP,EAAAA,UAAU,EAAEO,KAAK,CAACP;AADqB,CAAnB,CAAxB;;AAIA,eAAenB,OAAO,CAAC2B,eAAD,CAAP,CAAyBrB,OAAzB,CAAf","sourcesContent":["import React from 'react';\n\nimport './Sidebar.scss';\nimport BoardCard from '../BoardCard/BoardCard';\nimport Button from '../Button/Button';\n\nimport BoardModal from '../Modals/BoardModal';\nimport { connect } from 'react-redux';\n\ninterface SidebarState {\n    modalIsOpen: boolean;\n}\n\ninterface Props {\n    boardsList: Array<{\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }>;\n    onSetActiveBoard: typeof actions.onSetActiveBoard;\n}\n\nconst actions = {\n    onSetActiveBoard: (val: string) => ({type: 'SET_ACTIVE_BOARD', payload: val})\n}\n\nclass Sidebar extends React.Component<Props, SidebarState> {\n\n    initState() {\n        this.setState({\n          modalIsOpen: false\n        });\n    }\n    \n    UNSAFE_componentWillMount() {\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.initState();\n    }\n\n    openModal() {\n        this.setState({\n            modalIsOpen: true\n        });\n    }\n     \n    closeModal() {\n        this.setState({\n            modalIsOpen: false\n        });\n    }\n    \n\n    changeActiveBoard(boardId: number) {\n\n    }\n\n    render () {\n        return (\n            <div className=\"sidebar\">\n                <div className=\"sidebar__title\">Boards</div>\n                <ul className=\"sidebar__list\">\n                    {this.props.boardsList.map((b) => (\n                        <li className=\"sidebar__element\" key={b.id} onClick={()=>alert(b.id)}>\n                            <BoardCard \n                                imgUrl={b.img}\n                                boardTitle={b.name}\n                                todos={0} />\n                        </li>\n                    ))}\n                </ul>\n                <div>\n                    <Button \n                        buttonText=\"+ Create Board\"\n                        buttonType=\"button--bottom\"\n                        openModal={this.openModal}\n                    />\n                </div>\n                <BoardModal \n                    modalIsOpen={this.state.modalIsOpen}\n                    openModal={this.openModal}\n                    closeModal={this.closeModal}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: Props) => ({\n    boardsList: state.boardsList\n})\n\nexport default connect(mapStateToProps)(Sidebar);"]},"metadata":{},"sourceType":"module"}