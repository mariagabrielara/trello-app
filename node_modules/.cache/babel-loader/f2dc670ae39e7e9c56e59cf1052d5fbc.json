{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './Board.scss';\nimport Panel from '../Panel/Panel';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragStart = (e, id) => {\n      console.log('dragstart:', id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDrop = (e, cat) => {\n      let id = e.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.key === id) {\n          task.panel = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  initState() {\n    let currentBoard = this.props.boardsList.filter(b => b.id === this.props.id);\n    let tasksList = [];\n\n    if (this.state.board.todos) {\n      tasksList: [...this.state.board.todos];\n    }\n\n    if (this.state.board.inprogress) {\n      tasksList: [...this.state.board.inprogress];\n    }\n\n    if (this.state.board.done) {\n      tasksList: [...this.state.board.done];\n    }\n\n    this.setState({\n      tasks: tasksList // [{   \n      //     key: Math.random().toString(), \n      //     panel: \"todo\", \n      //     taskComponent: (\n      //         <Task\n      //             taskCategory=\"TD\"\n      //             taskName=\"TD 1\"\n      //             taskDate=\"1-1-19\"\n      //             taskStatus=\"Active\"\n      //         />\n      //     )\n      // }]  \n      ,\n      board: {\n        id: currentBoard[0].id,\n        img: currentBoard[0].img,\n        name: currentBoard[0].name,\n        dueDate: currentBoard[0].dueDate,\n        todos: currentBoard[0].todos,\n        inprogress: currentBoard[0].inprogress,\n        done: currentBoard[0].done\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.initState();\n  }\n\n  render() {\n    let tasks = {\n      todo: this.state.board.todos,\n      inprogress: this.state.board.inprogress,\n      done: this.state.board.done\n    };\n    this.state.tasks.forEach(t => {\n      switch (t.panel) {\n        case 'todo':\n          tasks.todo.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'inprogress':\n          tasks.inprogress.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'done':\n          tasks.done.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.board.name), React.createElement(\"div\", {\n      className: \"board__due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Due date: \", this.state.board.dueDate), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"todo\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.todo,\n      panelTitle: \"TODO\",\n      panelQuantity: tasks.todo.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"inprogress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.inprogress,\n      panelTitle: \"IN PROGRESS\",\n      panelQuantity: tasks.inprogress.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"done\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.done,\n      panelTitle: \"DONE\",\n      panelQuantity: tasks.done.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx"],"names":["React","Panel","Board","Component","onDragStart","e","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","key","panel","setState","initState","currentBoard","props","boardsList","b","tasksList","board","todos","inprogress","done","img","name","dueDate","componentWillMount","render","todo","forEach","t","push","taskComponent","length"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Board.scss';\n\nimport Panel from '../Panel/Panel';\nimport Task from '../Task/Task';\n\ninterface Props {\n    id: number,\n    boardsList: Array<{\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }>;\n}\n\ninterface BoardState {\n    tasks: { \n        key: string, \n        panel: string, \n        taskComponent: JSX.Element \n    }[],\n    board: {\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }\n}\n\nclass Board extends React.Component<Props, BoardState> {\n\n    initState() {\n\n        let currentBoard = this.props.boardsList.filter((b) => b.id === this.props.id);\n        let tasksList: any[] = [];\n\n        if (this.state.board.todos) {\n            tasksList: [...this.state.board.todos]\n        }\n\n        if (this.state.board.inprogress) {\n            tasksList: [...this.state.board.inprogress]\n        }\n\n        if (this.state.board.done) {\n            tasksList: [...this.state.board.done]\n        }\n\n        this.setState({\n            tasks: tasksList\n                // [{   \n                //     key: Math.random().toString(), \n                //     panel: \"todo\", \n                //     taskComponent: (\n                //         <Task\n                //             taskCategory=\"TD\"\n                //             taskName=\"TD 1\"\n                //             taskDate=\"1-1-19\"\n                //             taskStatus=\"Active\"\n                //         />\n                //     )\n                // }]  \n            ,\n            board: {\n                id: currentBoard[0].id, \n                img: currentBoard[0].img, \n                name: currentBoard[0].name, \n                dueDate: currentBoard[0].dueDate, \n                todos: currentBoard[0].todos, \n                inprogress: currentBoard[0].inprogress, \n                done: currentBoard[0].done\n            }\n        });\n    }\n\n    componentWillMount() {\n        this.initState();\n    }\n\n    onDragStart = (e: React.DragEvent, id: string) => {\n        console.log('dragstart:', id);\n        e.dataTransfer.setData(\"id\",id);\n    }\n\n    onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    onDrop = (e: React.DragEvent, cat: string) => {\n        let id = e.dataTransfer.getData(\"id\");\n        let tasks = this.state.tasks.filter((task) => {\n            if (task.key === id) {\n                task.panel = cat;\n            }\n            return task;\n        });\n\n        this.setState({\n            ...this.state,\n            tasks\n        });\n    }\n\n    render () {\n\n        let tasks: {\n            todo: Array<JSX.Element>, \n            inprogress: Array<JSX.Element>, \n            done: Array<JSX.Element>\n        } = {\n            todo: this.state.board.todos,\n            inprogress: this.state.board.inprogress,\n            done: this.state.board.done\n        }\n\n        this.state.tasks.forEach((t) => {\n            switch (t.panel) {\n                case 'todo':\n                    tasks.todo.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'inprogress':\n                    tasks.inprogress.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'done':\n                    tasks.done.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n            }\n            \n        });\n\n        return (\n            <div className=\"board\">\n                <div className=\"board__name\">{this.state.board.name}</div>\n                <div className=\"board__due-date\">Due date: {this.state.board.dueDate}</div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"todo\")}}>\n                    <Panel \n                        tasksList={tasks.todo}\n                        panelTitle=\"TODO\"\n                        panelQuantity={tasks.todo.length}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"inprogress\")}}>\n                    <Panel \n                        tasksList={tasks.inprogress}\n                        panelTitle=\"IN PROGRESS\"\n                        panelQuantity={tasks.inprogress.length}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"done\")}}>\n                    <Panel \n                        tasksList={tasks.done}\n                        panelTitle=\"DONE\"\n                        panelQuantity={tasks.done.length}\n                    />\n                </div>\n            </div>\n        );\n    }\n    \n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}