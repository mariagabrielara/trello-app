{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './Board.scss';\nimport Panel from '../Panel/Panel';\nimport Task from '../Task/Task';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragStart = (e, id) => {\n      console.log('dragstart:', id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDrop = (e, cat) => {\n      let id = e.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.key === id) {\n          task.panel = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  initState() {\n    let currentBoard = this.props.boardsList.filter(b => b.id === this.props.id);\n    this.setState({\n      tasks: [{}],\n      board: {\n        id: currentBoard[0].id,\n        img: currentBoard[0].img,\n        name: currentBoard[0].name,\n        dueDate: currentBoard[0].dueDate,\n        todos: currentBoard[0].todos,\n        inprogress: currentBoard[0].inprogress,\n        done: currentBoard[0].done\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.initState();\n  }\n\n  componentWillUpdate() {\n    let todoTasksConverted = this.state.board.todos.map(t => ({\n      key: t.taskId,\n      panel: \"todos\",\n      taskComponent: React.createElement(Task, {\n        taskCategory: t.category,\n        taskName: t.taskName,\n        taskDate: t.taskDueDate,\n        taskStatus: t.taskStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })\n    }));\n    let inprogressTasksConverted = this.state.board.inprogress.map(t => ({\n      key: t.taskId,\n      panel: \"inprogress\",\n      taskComponent: React.createElement(Task, {\n        taskCategory: t.category,\n        taskName: t.taskName,\n        taskDate: t.taskDueDate,\n        taskStatus: t.taskStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })\n    }));\n    let doneTasksConverted = this.state.board.done.map(t => ({\n      key: t.taskId,\n      panel: \"done\",\n      taskComponent: React.createElement(Task, {\n        taskCategory: t.category,\n        taskName: t.taskName,\n        taskDate: t.taskDueDate,\n        taskStatus: t.taskStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })\n    }));\n    this.setState(_objectSpread({}, this.state, {\n      tasks: [todoTasksConverted, inprogressTasksConverted, doneTasksConverted]\n    }));\n  }\n\n  render() {\n    let tasks = {\n      todo: [],\n      inprogress: [],\n      done: []\n    };\n    this.state.tasks.forEach(t => {\n      switch (t.panel) {\n        case 'todo':\n          tasks.todo.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'inprogress':\n          tasks.inprogress.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n\n        case 'done':\n          tasks.done.push(React.createElement(\"div\", {\n            key: t.key,\n            onDragStart: e => this.onDragStart(e, t.key),\n            draggable: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, \" \", t.taskComponent, \" \"));\n          break;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.board.name), React.createElement(\"div\", {\n      className: \"board__due-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Due date: \", this.state.board.dueDate), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"todo\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.todo,\n      panelTitle: \"TODO\",\n      panelQuantity: this.state.board.todos.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"inprogress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.inprogress,\n      panelTitle: \"IN PROGRESS\",\n      panelQuantity: this.state.board.inprogress.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"done\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      tasksList: tasks.done,\n      panelTitle: \"DONE\",\n      panelQuantity: this.state.board.done.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/Board/Board.tsx"],"names":["React","Panel","Task","Board","Component","onDragStart","e","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","key","panel","setState","initState","currentBoard","props","boardsList","b","board","img","name","dueDate","todos","inprogress","done","componentWillMount","componentWillUpdate","todoTasksConverted","map","t","taskId","taskComponent","category","taskName","taskDueDate","taskStatus","inprogressTasksConverted","doneTasksConverted","render","todo","forEach","push","length"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Board.scss';\n\nimport Panel from '../Panel/Panel';\nimport Task from '../Task/Task';\n\ninterface Props {\n    id: number,\n    boardsList: Array<{\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }>;\n}\n\ninterface BoardState {\n    tasks: { \n        key: string, \n        panel: string, \n        taskComponent: JSX.Element \n    }[],\n    board: {\n        id: number, \n        img: string, \n        name: string, \n        dueDate: string, \n        todos: [],\n        inprogress: [],\n        done: []\n    }\n}\n\ninterface TaskStructure {\n    taskId: number,\n    category: string,\n    taskName: string,\n    taskDueDate: string,\n    taskStatus: string\n}\n\nclass Board extends React.Component<Props, BoardState> {\n\n    initState() {\n\n        let currentBoard = this.props.boardsList.filter((b) => b.id === this.props.id);\n\n        this.setState({\n            tasks: [{}],\n            board: {\n                id: currentBoard[0].id, \n                img: currentBoard[0].img, \n                name: currentBoard[0].name, \n                dueDate: currentBoard[0].dueDate, \n                todos: currentBoard[0].todos, \n                inprogress: currentBoard[0].inprogress, \n                done: currentBoard[0].done\n            }\n        });\n    }\n\n    componentWillMount() {\n        this.initState();\n    }\n\n    componentWillUpdate() {\n        let todoTasksConverted = this.state.board.todos.map(\n            (t: TaskStructure) => ({\n                key: t.taskId, \n                panel: \"todos\", \n                taskComponent: (\n                    <Task\n                        taskCategory={t.category}\n                        taskName={t.taskName}\n                        taskDate={t.taskDueDate}\n                        taskStatus={t.taskStatus}\n                    />\n                )\n            }));\n        let inprogressTasksConverted = this.state.board.inprogress.map(\n                (t: TaskStructure) => ({\n                    key: t.taskId, \n                    panel: \"inprogress\", \n                    taskComponent: (\n                        <Task\n                            taskCategory={t.category}\n                            taskName={t.taskName}\n                            taskDate={t.taskDueDate}\n                            taskStatus={t.taskStatus}\n                        />\n                    )\n                }));\n          let doneTasksConverted = this.state.board.done.map(\n                (t: TaskStructure) => ({\n                    key: t.taskId, \n                    panel: \"done\", \n                    taskComponent: (\n                        <Task\n                            taskCategory={t.category}\n                            taskName={t.taskName}\n                            taskDate={t.taskDueDate}\n                            taskStatus={t.taskStatus}\n                        />\n                    )\n                }));\n            this.setState({\n                ...this.state,\n                tasks: [todoTasksConverted, inprogressTasksConverted, doneTasksConverted]\n            });\n            \n    }\n\n    onDragStart = (e: React.DragEvent, id: string) => {\n        console.log('dragstart:', id);\n        e.dataTransfer.setData(\"id\",id);\n    }\n\n    onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    onDrop = (e: React.DragEvent, cat: string) => {\n        let id = e.dataTransfer.getData(\"id\");\n        let tasks = this.state.tasks.filter((task) => {\n            if (task.key === id) {\n                task.panel = cat;\n            }\n            return task;\n        });\n\n        this.setState({\n            ...this.state,\n            tasks\n        });\n    }\n\n    render () {\n\n        let tasks: {\n            todo: Array<JSX.Element>, \n            inprogress: Array<JSX.Element>, \n            done: Array<JSX.Element>\n        } = {\n                todo: [],\n                inprogress: [],\n                done: []\n        }\n\n        this.state.tasks.forEach((t) => {\n            switch (t.panel) {\n                case 'todo':\n                    tasks.todo.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'inprogress':\n                    tasks.inprogress.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n\n                case 'done':\n                    tasks.done.push( \n                        <div \n                            key={t.key} \n                            onDragStart={(e) => this.onDragStart(e, t.key)} \n                            draggable> {t.taskComponent} </div>\n                    );\n                break;\n            }\n            \n        });\n\n        return (\n            <div className=\"board\">\n                <div className=\"board__name\">{this.state.board.name}</div>\n                <div className=\"board__due-date\">Due date: {this.state.board.dueDate}</div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"todo\")}}>\n                    <Panel \n                        tasksList={tasks.todo}\n                        panelTitle=\"TODO\"\n                        panelQuantity={this.state.board.todos.length}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"inprogress\")}}>\n                    <Panel \n                        tasksList={tasks.inprogress}\n                        panelTitle=\"IN PROGRESS\"\n                        panelQuantity={this.state.board.inprogress.length}\n                    />\n                </div>\n                <div \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"done\")}}>\n                    <Panel \n                        tasksList={tasks.done}\n                        panelTitle=\"DONE\"\n                        panelQuantity={this.state.board.done.length}\n                    />\n                </div>\n            </div>\n        );\n    }\n    \n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}