{"ast":null,"code":"import _defineProperty from \"/Users/mariagabriela/Documents/trello-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mariagabriela/Documents/trello-app/src/components/DragDropComponent/DragDropComponent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './DragDropComponent.scss';\n\nclass DragDropComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragStart = (e, id) => {\n      console.log('dragstart:', id);\n      e.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDrop = (e, cat) => {\n      let id = e.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name == id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  initState() {\n    this.setState({\n      tasks: [{\n        name: \"A\",\n        category: \"wip\",\n        bgcolor: \"yellow\"\n      }, {\n        name: \"B\",\n        category: \"wip\",\n        bgcolor: \"pink\"\n      }, {\n        name: \"C\",\n        category: \"complete\",\n        bgcolor: \"skyblue\"\n      }]\n    });\n  }\n\n  componentWillMount() {\n    this.initState();\n  }\n\n  render() {\n    let tasks = {\n      wip: [],\n      complete: []\n    };\n    this.state.tasks.forEach(t => {\n      let selection = 0;\n\n      if (t.category == 'wip') {\n        selection;\n        tasks.wip.push(React.createElement(\"div\", {\n          key: t.name,\n          onDragStart: e => this.onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \" \", t.name, \" \"));\n      } else {\n        tasks.complete.push(React.createElement(\"div\", {\n          key: t.name,\n          onDragStart: e => this.onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \" \", t.name, \" \"));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"container-drag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wip\",\n      onDrop: e => {\n        this.onDrop(e, \"wip\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"WIP\"), wip), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => this.onDrop(e, \"complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"COMPLETED\"), complete));\n  }\n\n}\n\nexport default DragDropComponent;","map":{"version":3,"sources":["/Users/mariagabriela/Documents/trello-app/src/components/DragDropComponent/DragDropComponent.tsx"],"names":["React","DragDropComponent","Component","onDragStart","e","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","name","category","setState","initState","bgcolor","componentWillMount","render","wip","complete","forEach","t","selection","push","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './DragDropComponent.scss';\n\ninterface DDState {\n    tasks: { name: string, category: any, bgcolor: string }[]\n}\n\nclass DragDropComponent extends React.Component<{}, DDState> {\n\n    initState() {\n        this.setState({\n            tasks: [\n                {name: \"A\", category: \"wip\", bgcolor: \"yellow\"},\n                {name: \"B\", category: \"wip\", bgcolor: \"pink\"},\n                {name: \"C\", category: \"complete\", bgcolor: \"skyblue\"}\n            ]\n        });\n    }\n\n    componentWillMount() {\n        this.initState();\n    }\n\n    onDragStart = (e: React.DragEvent, id: string) => {\n        console.log('dragstart:', id);\n        e.dataTransfer.setData(\"id\",id);\n    }\n\n    onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    }\n\n    onDrop = (e: React.DragEvent, cat: string) => {\n        let id = e.dataTransfer.getData(\"id\");\n        let tasks = this.state.tasks.filter((task) => {\n            if (task.name == id) {\n                task.category = cat;\n            }\n            return task;\n        });\n\n        this.setState({\n            ...this.state,\n            tasks\n        });\n    }\n\n    render() {\n        let tasks: {wip: Array<JSX.Element>, complete: Array<JSX.Element>} = {\n            wip: [],\n            complete: []\n        }\n\n        this.state.tasks.forEach((t) => {\n            let selection = 0;\n            if(t.category == 'wip') {\n                selection\n                tasks.wip.push( \n                    <div \n                            key={t.name} \n                            onDragStart={(e) => this.onDragStart(e, t.name)} \n                            draggable \n                            className=\"draggable\" \n                            style={{backgroundColor: t.bgcolor}}> {t.name} </div>\n                    );\n            } else {\n                tasks.complete.push( \n                    <div \n                            key={t.name} \n                            onDragStart={(e) => this.onDragStart(e, t.name)} \n                            draggable \n                            className=\"draggable\" \n                            style={{backgroundColor: t.bgcolor}}> {t.name} </div>\n                    );\n            }\n            \n        });\n\n        return (\n            <div className=\"container-drag\">\n                <div className=\"wip\" onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n                    <span className=\"task-header\">WIP</span>\n                    {wip}\n                </div>\n                <div className=\"droppable\" onDragOver={(e)=>this.onDragOver(e)} onDrop={(e)=>this.onDrop(e, \"complete\")}>\n                    <span className=\"task-header\">COMPLETED</span>\n                    {complete}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DragDropComponent;"]},"metadata":{},"sourceType":"module"}